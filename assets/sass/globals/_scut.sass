%clearfix 
	// zoom: 1
	&:after
		content: ''
		display: table
		line-height: 0
		clear: both

@mixin prefix($property, $value)
	-webkit-#{$property}: #{$value}
	-moz-#{$property}: #{$value}
	-ms-#{$property}: #{$value}
	-o-#{$property}: #{$value}
	#{$property}: #{$value}


@mixin transition($transition: all 0.2s)
	@include prefix('transition', #{$transition})


@mixin gradient($from, $to, $fallback, $start, $end)
	background: $fallback
	background: -moz-linear-gradient($start, $from 0, $to 100%)
	// background: -webkit-gradient(linear, left top, left bottom, color-stop(0, $from), color-stop(100%, $to))
	background: -webkit-linear-gradient($start, $from 0, $to 100%)
	background: -o-linear-gradient($start, $from 0, $to 100%)
	background: -ms-linear-gradient($start, $from 0, $to 100%)
	background: linear-gradient($start $end, $from 0, $to 100%)


@mixin keyframes($animationName)
	@-webkit-keyframes #{$animationName}
		@content
	
	@-moz-keyframes #{$animationName}
		@content
	
	@-o-keyframes #{$animationName}
		@content
	
	@keyframes #{$animationName}
		@content
	
@mixin placeholder
	::-webkit-input-placeholder
		@content
	:-moz-placeholder
		@content
	::-moz-placeholder
		@content
	:-ms-input-placeholder
		@content

@mixin animation($name, $duration: 1000ms, $iterations: infinite, $timing-function: ease, $delay: 0ms)
	@include prefix(animation, $name $duration $iterations $timing-function $delay)


@mixin ghostVerticalAlign()
	&:before
		content: ''
		display: inline-block
		vertical-align: middle
		height: 100%
		width: .1px
	

$headerText: 16px
@function color-control($color)
	@if (lightness( $color ) > 48)
		@return $headerText
	@else
		@return #fff
	

/* $smartphone: 480px */
/* $tabletPortrait: 767px */
/* $tabletLandscape: 1023px */
/* $xsDesktop: 1100px */
/* $smDesktop: 1200px */
/* $mdDesktop: 1280px */
/* // $desktop: 1174px */
/* $largeScreen: 1440px */
/* $hdScreen: 1799px */


// $maxPhoneSize: 767px
// $minTabletSize: $maxPhoneSize + 1px
// $maxTabletSize: 1100px
// $minIpadSize: 768px
// $minDesktopSize: 1200px
// $minHDSize: 1599px


@mixin respondTo($media)
	@if $media == notebook
		@media (max-width: $notebook)
			@content
		
	@else if $media == netbook
		@media (max-width: $netbook)
			@content
		
	@else if $media == tabletLandscape
		@media (max-width: $tabletLandscape)
			@content
		
	@else if $media == tabletPortrait
		@media (max-width: $tabletPortrait)
			@content
		
	@else if $media == smartphone
		@media (max-width: $smartphone)
			@content
		
	@else if $media == desktopLG
		@media (min-width: $desktopLG)
			@content
		
	@else if $media == desktopHDP
		@media (min-width: $desktopHDP)
			@content
		
	@else if $media == hd
		@media (min-width: $desktopFHD)
			@content
		
	
@mixin font-size($fs-map, $isImportant: '')
	$commonScreen: 1366px
	@each $fs-breakpoint, $fs-font-size in $fs-map
		@if $fs-breakpoint == null
			font-size: $fs-font-size #{$isImportant}
		 
		@else if $fs-breakpoint <= $commonScreen
			@media (max-width: $fs-breakpoint)
				font-size: $fs-font-size
		
		@else
			@media (min-width: $fs-breakpoint)
				font-size: $fs-font-size

// Tooltips
@mixin hui_tooltip($content: attr(data-tooltip), $direction: top)
	position: relative
	&:before, &:after
		display: none
		z-index: 98
	
	&:hover
		&:after // for text bubble
			content: $content
			display: block
			position: absolute
			height: 12px // (makes total height including padding 22px)
			padding: 6px
			font-size: 12px
			white-space: nowrap
			color: #fff
			@include text-shadow(1px 1px #000)
			background-color: #222
		
		@if ($direction == 'top')
			&:before
				@include triangle(down, 6px, #222)
				top: -6px
				margin-top: 0
				left: 47%
			
			&:after
				top: -28px
				left: 47%
				margin-left: -20px
			
		@else if ($direction == 'bottom')
			&:before
				@include triangle(up, 6px, #222)
				top: auto
				margin-top: 0
				bottom: -6px
				left: 47%
			
			&:after
				bottom: -28px
				left: 47%
				margin-left: -20px


// Set background image with default values
@mixin bgImage($url : '', $position : center, $size : cover, $repeat: no-repeat)
	background: url($url) $position / $size $repeat


/*
 * @include triangle within a pseudo element and add positioning properties (ie. top, left)
 * $direction: up, down, left, right
 */
@mixin triangle($direction, $height: 6px, $size: 6px, $color: #222)
	content: ''
	display: block
	position: absolute
	height: 0
	width: 0
	@if ($direction == 'up')
		border-bottom: $height solid $color
		border-left: $size solid transparent
		border-right: $size solid transparent
	@else if ($direction == 'down')
		border-top: $height solid $color
		border-left: $size solid transparent
		border-right: $size solid transparent
	@else if ($direction == 'left')
		border-top: $size solid transparent
		border-bottom: $size solid transparent
		border-right: $height solid $color
	@else if ($direction == 'right')
		border-top: $size solid transparent
		border-bottom: $size solid transparent
		border-left: $height solid $color
	

@mixin faIcon($clsName)
	&:before
		display: inline-block
		font: normal normal normal 14px/1 FontAwesome
		font-size: inherit
		text-rendering: auto
		@include prefix(font-smoothing, antialiased)

		@if ($clsName == 'angle-left')
			content: '\f104'
		

@function str-replace($string, $search, $replace: "")
	$index: str-index($string, $search)
	@if $index
		@return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace)
	@return $string;

		
@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg)
	$src: ()
	$extmods: ( eot: "?", svg: "#" + str-replace($name, " ", "_") )
	$formats: ( otf: "opentype", ttf: "truetype" )
	@each $ext in $exts
		$extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext)
		$format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext)
		$src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma)
	@font-face
		font-family: quote($name)
		font-style: $style
		font-weight: $weight
		src: $src
		
		
/* 
	$xlg-fonts: (
		null: 120px,
		$mdDesktop: 100px,
		$smDesktop: 90px,
		$xsDesktop: 80px,
		$largeScreen: 160px
	)

	$lg-fonts: (
		null: 51px,
		$mdDesktop: 45px,
		$xsDesktop: 40px,
		$largeScreen: 72px
	)

	$md-fonts: (
		null: 40px,
		$mdDesktop: 35px,
		$xsDesktop: 28px,
		$largeScreen: 60px
	)

	$sm-fonts: (
		null: 26px,
		$mdDesktop: 22px,
		$xsDesktop: 19px,
		$largeScreen: 40px
	)

	$xs-fonts: (
		null: 17px,
		$mdDesktop: 15px,
		$xsDesktop: 14px,
		$largeScreen: 24px
	)

	$content-fonts: (
		null: 14px,
		$mdDesktop: 13px,
		$xsDesktop: 11px,
		$largeScreen: 16px
	)
 */


/* Render Helping classes */

$minSpace: 0
$maxSpace: 20
$clsTypes: ('m':'margin', 'p':'padding')
$directions: ('t':'top', 'r':'right', 'b':'bottom', 'l':'left')

@each $tKey, $tVal in $clsTypes
	@each $dKey, $dVal in $directions
		@for $i from $minSpace through $maxSpace
			.#{$tKey}#{$dKey}-#{$i*5}
				#{$tVal}-#{$dVal}: $i * 5px !important


// Font size help
@for $i from 10 through 40
	.font-#{$i}
		font-size: #{$i}px
	
@mixin ratioWrapper($X, $Y)
	position: relative
	&:before
		content: ''
		display: block
		padding-top: percentage($Y / $X)
	

	& > *:first-child
		width: 100%
		height: 100%
		position: absolute
		top: 0
		left: 0
		overflow: hidden
	

.vertical-center,
.horizontal-center
	position: absolute

.vertical-center
	top: 50%
	@include prefix(transform, translateY(-50%))

.horizontal-center
	left: 50%
	@include prefix(transform, translateX(-50%))


.absolute-center
	display: block
	width: auto
	height: auto
	max-width: 100%
	max-height: 100%
	position: absolute
	top: 50%
	left: 50%
	@include prefix(transform, translate(-50%, -50%))


.iframe-container
	@include ratioWrapper(560, 315)


.d-tbl
	display: table
	width: 100%
	height: 100%
	.d-tbl-cell
		display: table-cell
		vertical-align: middle
	


@mixin clearLink($color: #000)
	color: $color
	text-decoration: none
	&:hover,
	&:active,
	&:focus
		text-decoration: none
	

@mixin setRowSpace($space)
	margin-left: -#{$space/2}px
	margin-right: -#{$space/2}px
	& > [class*="col"]
		padding-left: #{$space/2}px
		padding-right: #{$space/2}px
	

/* Base for label styling */
.nice-check
	$checkColor: #fff
	&:checked,
	&:not(:checked)
		position: absolute
		left: -9999px
		& + label
			position: relative
			padding-left: 50px
			cursor: pointer
			font-weight: 100
			min-height: 30px
			line-height: 30px
			&:before
				content: ''
				position: absolute
				left: 0
				top: 0
				width: 30px
				height: 30px
				border: 1px solid $checkColor
				background: #fff
				border-radius: 50%
			
			&:after
				content: '✔'
				position: absolute
				top: 0
				left: 9px
				line-height: 30px
				font-size: 14px
				// color: #fff
				color: $checkColor
				transition: all .1s
				font-weight: 600
			
		
	
	&:checked + label:before
		// background-color: $checkColor
	
	&:not(:checked) + label:after
		opacity: 0
		transform: scale(0)
	
	&:checked + label:after
		opacity: 1
		transform: scale(1)
	
	&:focus
		outline: none !important
	
	&:disabled
		&:not(:checked) + label:before,
		&:checked + label:before
			box-shadow: none
			border-color: #bbb
			background-color: #ddd
		
		&:checked + label:after
			color: #999
		
		& + label
			color: #aaa
		
	
	$smSize: 15px
	&.nice-check-sm
		&:not(:checked) + label,
		&:checked + label
			// height: 30px
			min-height: $smSize
			line-height: $smSize
			padding-left: 23px
			position: relative
			// top: 7px
			&:before
				width: $smSize
				height: $smSize
			
			&:after
				line-height: $smSize
				left: 1px
			
		
		&:checked + label:after
			opacity: 1
			transform: scale(.8)
		
	

	&:checked,
	&:not(:checked)
		&[type="checkbox"] + label:before
			border-radius: 0